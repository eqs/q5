name: Build Wheel

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} for ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, macOS-10.15]
          # TODO: Add Ubuntu support like:
          # os: [ubuntu-20.04, windows-2019, macOS-10.15]
        arch: [auto]

    steps:
      - name: Checkout q5
        uses: actions/checkout@v2

      - uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          default: true

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.3.1
        env:
          CIBW_SKIP: "cp27-* cp34-* cp35-* cp36-* pp* *-win32 *-manylinux_i686"
          CIBW_ARCHS_LINUX: ${{ matrix.arch }}
          CIBW_TEST_REQUIRES: "pytest"
          CIBW_TEST_COMMAND:  "python -c \"import q5\""
          CIBW_BEFORE_BUILD_LINUX: "sudo apt-get -y install build-essential python cmake pkg-config;\
                                    sudo apt-get -y install libasound2-dev;\
                                    sudo apt -y install libxcb-shape0-dev libxcb-xfixes0-dev;\
                                    sudo dnf -y install vulkan vulkan-info"

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Build sdist
      run: |
        python -m pip install --upgrade pip setuptools setuptools-rust setuptools-scm
        python setup.py sdist

    - uses: actions/upload-artifact@v2
      with:
        path: dist/*.tar.gz

  upload_test_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to Test PyPI for every commit on main branch
    if: github.event_name == 'push' && github.event.ref == 'refs/heads/main'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.Q5_TEST_PYPI_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.Q5_PYPI_TOKEN }}
